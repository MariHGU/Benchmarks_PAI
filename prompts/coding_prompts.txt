I am trying to rename a column in MySQL community server 5.5.27 using this SQL expression: ALTER TABLE table_name RENAME COLUMN old_col_name TO new_col_name; I also tried ALTER TABLE table_name RENAME old_col_name TO new_col_name; But it says: Error: check the Manual that corresponds to your MySQL server version
I recently installed anaconda2 on my Mac. By default Conda is configured to activate the base environment when I open a fresh terminal session. I want access to the Conda commands (i.e. I want the path to Conda added to my $PATH which Conda does when initialised so that's fine). However I don't ordinarily program in python, and I don't want Conda to activate the base environment by default. When first executing conda init from the prompt, Conda adds the following to my .bash_profile: # >>> conda initialize >>> # !! Contents within this block are managed by 'conda init' !! __conda_setup=\"$('/Users/geoff/anaconda2/bin/conda' 'shell.bash' 'hook' 2> /dev/null)\" if [ $? -eq 0 ]; then eval \"$__conda_setup\" else if [ -f \"/Users/geoff/anaconda2/etc/profile.d/conda.sh\" ]; then . \"/Users/geoff/anaconda2/etc/profile.d/conda.sh\" else export PATH=\"/Users/geoff/anaconda2/bin:$PATH\" fi # fi unset __conda_setup # <<< conda initialize <<< If I comment out the whole block, then I can't activate any Conda environments. I tried to comment out the whole block except for export PATH=\"/Users/geoff/anaconda2/bin:$PATH\" But then when I started a new session and tried to activate an environment, I got this error message: CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.
I would like to balance the data, until each file from the dictionary has around 300 pictures. I would like the augment_cropped_images to take in the dictionary and add augmented images to the necessary pictures_PLU codes. import os from PIL import Image from collections import defaultdict # === CONFIGURATION === NUM_FOLDERS = None # Set to None to process all folders or a specific number (e.g., 5) NUM_FILES_PER_FOLDER = None # Set to None to process all cropped images per folder or a specific number (e.g., 5) OUTPUT_PATH = 'out_data/' def check_dataset_balance(output_path=OUTPUT_PATH): \"\"\" Checks whether each category (identified by the filename prefix, assumed to be the PLU number) in the output folder has the same number of images as the category with the highest count. Returns: missing_dict (dict): A dictionary where keys are PLU numbers and values are the number of images missing to reach the maximum count. is_balanced (bool): True if every category has the maximum count, False otherwise. \"\"\" # List all PNG files in the output folder all_files = [f for f in os.listdir(output_path) if f.endswith('.png')] # Count images per category (assumes category is the first part of the filename before an underscore) category_counts = defaultdict(int) for filename in all_files: parts = filename.split('_') if parts: category = parts[0] category_counts[category] += 1 if not category_counts: print(\"No images found in the output folder.\") return {}, True # Find the maximum image count among categories max_count = max(category_counts.values()) # Build a dictionary of missing images per category missing_dict = {} is_balanced = True for category, count in sorted(category_counts.items()): missing = max_count - count missing_dict[category] = missing if missing > 0: is_balanced = False return missing_dict, is_balanced def augment_cropped_images(output_path='out_data/', num_folders=None, num_files_per_folder=None): \"\"\" Iterates over already-cropped images in the output directory and generates augmentations (rotations, horizontal flip, vertical flip, and a combined flip + rotation) only if the folder has less than 200 PNG images. \"\"\" all_items = os.listdir(output_path) folders = [f for f in sorted(all_items) if os.path.isdir(os.path.join(output_path, f))] # Limit the number of folders if specified if num_folders is not None: folders = folders[:num_folders] for folder in folders: folder_path = os.path.join(output_path, folder) # Count total PNG files in the folder total_png_files = [f for f in os.listdir(folder_path) if f.endswith('.png')] if len(total_png_files) >= 200: print(f\"Skipping folder '{folder}' because it already has {len(total_png_files)} images.\") continue # Get all cropped images (files ending with '_cropped.png') cropped_files = [f for f in os.listdir(folder_path) if f.endswith('_cropped.png')] if num_files_per_folder is not None: cropped_files = cropped_files[:num_files_per_folder] for cropped_file in cropped_files: base_name = cropped_file.replace('_cropped.png', '') image_path = os.path.join(folder_path, cropped_file) try: img = Image.open(image_path) except Exception as e: print(f\"⚠️ Failed to open image {image_path}: {e}\") continue # --- Augmentations --- # 1. Rotations (90°, 180°, 270°) for angle in [90, 180, 270]: rotated_img = img.rotate(angle, expand=True) rotated_save_path = os.path.join(folder_path, f\"{base_name}_cropped_rot{angle}.png\") rotated_img.save(rotated_save_path) print(f\"✅ Saved rotated {angle}° image: {rotated_save_path}\") # 2. Horizontal Flip flipped_h = img.transpose(Image.FLIP_LEFT_RIGHT) flipped_h_save_path = os.path.join(folder_path, f\"{base_name}_cropped_flipH.png\") flipped_h.save(flipped_h_save_path) print(f\"✅ Saved horizontal flip image: {flipped_h_save_path}\") # 3. Vertical Flip flipped_v = img.transpose(Image.FLIP_TOP_BOTTOM) flipped_v_save_path = os.path.join(folder_path, f\"{base_name}_cropped_flipV.png\") flipped_v.save(flipped_v_save_path) print(f\"✅ Saved vertical flip image: {flipped_v_save_path}\") # 4. Optional: Combined Augmentation (Horizontal flip + 90° rotation) flipped_h_rotated = flipped_h.rotate(90, expand=True) flipped_h_rotated_save_path = os.path.join(folder_path, f\"{base_name}_cropped_flipH_rot90.png\") flipped_h_rotated.save(flipped_h_rotated_save_path) print(f\"✅ Saved horizontal flip rotated 90° image: {flipped_h_rotated_save_path}\") if __name__ == '__main__': dict_change, balanced = check_dataset_balance(output_path=OUTPUT_PATH) if augment_cropped_images(output_path=OUTPUT_PATH, num_folders=NUM_FOLDERS, num_files_per_folder=NUM_FILES_PER_FOLDER)
 I am using Fedora Linux 38, and Docker version is Docker version 24.0.2, build cb74dfc. Trying to run my Golang code through docker-compose, it giving error with python error log. First I ran sudo systemctl start docker, and then see status sudo systemctl status docker. ● docker.service - Docker Application Container Engine Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; preset: disabled) Drop-In: /usr/lib/systemd/system/service.d └─10-timeout-abort.conf Active: active (running) since Thu 2023-07-06 15:36:12 WITA; 1h 28min ago TriggeredBy: ● docker.socket Docs: https://docs.docker.com Main PID: 6250 (dockerd) Tasks: 19 Memory: 25.1M CPU: 1.129s CGroup: /system.slice/docker.service └─6250 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock. Jul 06 15:36:11 fedora dockerd[6250]: time="2023-07-06T15:36:11.945573688+08:00" level=info msg="Loading containers: start." Jul 06 15:36:11 fedora dockerd[6250]: time="2023-07-06T15:36:11.951059455+08:00" level=info msg="Firewalld: docker zone already exists, returning" Jul 06 15:36:12 fedora dockerd[6250]: time="2023-07-06T15:36:12.201788778+08:00" level=info msg="Firewalld: interface docker0 already part of docker zone, returning" Jul 06 15:36:12 fedora dockerd[6250]: time="2023-07-06T15:36:12.219682126+08:00" level=info msg="Firewalld: interface docker0 already part of docker zone, returning" Jul 06 15:36:12 fedora dockerd[6250]: time="2023-07-06T15:36:12.575897504+08:00" level=info msg="Firewalld: interface docker0 already part of docker zone, returning" Jul 06 15:36:12 fedora dockerd[6250]: time="2023-07-06T15:36:12.693718363+08:00" level=info msg="Loading containers: done." Jul 06 15:36:12 fedora dockerd[6250]: time="2023-07-06T15:36:12.770247971+08:00" level=info msg="Docker daemon" commit=659604f graphdriver=overlay2 version=24.0.2 Jul 06 15:36:12 fedora dockerd[6250]: time="2023-07-06T15:36:12.770335275+08:00" level=info msg="Daemon has completed initialization" Jul 06 15:36:12 fedora dockerd[6250]: time="2023-07-06T15:36:12.808876169+08:00" level=info msg="API listen on /run/docker.sock" Jul 06 15:36:12 fedora systemd[1]: Started docker.service - Docker Application Container Engine. Then sudo dockerd --debug got INFO[2023-07-06T17:09:52.227973747+08:00] Starting up failed to start daemon, ensure docker is not running or delete /var/run/docker.pid: process with PID 6250 is still running. After that I go to my working directory and run docker-compose up -d and it return error like this Traceback (most recent call last): File "/usr/lib/python3.11/site-packages/urllib3/connectionpool.py", line 703, in urlopen httplib_response = self._make_request( ^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/urllib3/connectionpool.py", line 398, in _make_request conn.request(method, url, **httplib_request_kw) File "/usr/lib64/python3.11/http/client.py", line 1286, in request self._send_request(method, url, body, headers, encode_chunked) File "/usr/lib64/python3.11/http/client.py", line 1332, in _send_request self.endheaders(body, encode_chunked=encode_chunked) File "/usr/lib64/python3.11/http/client.py", line 1281, in endheaders self._send_output(message_body, encode_chunked=encode_chunked) File "/usr/lib64/python3.11/http/client.py", line 1041, in _send_output self.send(msg) File "/usr/lib64/python3.11/http/client.py", line 979, in send self.connect() File "/usr/lib/python3.11/site-packages/docker/transport/unixconn.py", line 30, in connect sock.connect(self.unix_socket) PermissionError: [Errno 13] Permission denied During handling of the above exception, another exception occurred: Traceback (most recent call last): File "/usr/lib/python3.11/site-packages/requests/adapters.py", line 489, in send resp = conn.urlopen( ^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/urllib3/connectionpool.py", line 787, in urlopen retries = retries.increment( ^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/urllib3/util/retry.py", line 550, in increment raise six.reraise(type(error), error, _stacktrace) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/urllib3/packages/six.py", line 718, in reraise raise value.with_traceback(tb) File "/usr/lib/python3.11/site-packages/urllib3/connectionpool.py", line 703, in urlopen httplib_response = self._make_request( ^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/urllib3/connectionpool.py", line 398, in _make_request conn.request(method, url, **httplib_request_kw) File "/usr/lib64/python3.11/http/client.py", line 1286, in request self._send_request(method, url, body, headers, encode_chunked) File "/usr/lib64/python3.11/http/client.py", line 1332, in _send_request self.endheaders(body, encode_chunked=encode_chunked) File "/usr/lib64/python3.11/http/client.py", line 1281, in endheaders self._send_output(message_body, encode_chunked=encode_chunked) File "/usr/lib64/python3.11/http/client.py", line 1041, in _send_output self.send(msg) File "/usr/lib64/python3.11/http/client.py", line 979, in send self.connect() File "/usr/lib/python3.11/site-packages/docker/transport/unixconn.py", line 30, in connect sock.connect(self.unix_socket) urllib3.exceptions.ProtocolError: ('Connection aborted.', PermissionError(13, 'Permission denied')) During handling of the above exception, another exception occurred: Traceback (most recent call last): File "/usr/lib/python3.11/site-packages/docker/api/client.py", line 214, in _retrieve_server_version return self.version(api_version=False)["ApiVersion"] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/docker/api/daemon.py", line 181, in version return self._result(self._get(url), json=True) ^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/docker/utils/decorators.py", line 46, in inner return f(self, *args, **kwargs) ^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/docker/api/client.py", line 237, in _get return self.get(url, **self._set_request_timeout(kwargs)) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/requests/sessions.py", line 602, in get return self.request("GET", url, **kwargs) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/requests/sessions.py", line 589, in request resp = self.send(prep, **send_kwargs) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/requests/sessions.py", line 703, in send r = adapter.send(request, **kwargs) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/requests/adapters.py", line 547, in send raise ConnectionError(err, request=request) requests.exceptions.ConnectionError: ('Connection aborted.', PermissionError(13, 'Permission denied')) During handling of the above exception, another exception occurred: Traceback (most recent call last): File "/usr/bin/docker-compose", line 33, in <module> sys.exit(load_entry_point('docker-compose==1.29.2', 'console_scripts', 'docker-compose')()) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/compose/cli/main.py", line 81, in main command_func() File "/usr/lib/python3.11/site-packages/compose/cli/main.py", line 200, in perform_command project = project_from_options('.', options) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/compose/cli/command.py", line 60, in project_from_options return get_project( ^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/compose/cli/command.py", line 152, in get_project client = get_client( ^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/compose/cli/docker_client.py", line 41, in get_client client = docker_client( ^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/compose/cli/docker_client.py", line 170, in docker_client client = APIClient(use_ssh_client=not use_paramiko_ssh, **kwargs) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/docker/api/client.py", line 197, in init self._version = self._retrieve_server_version() ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "/usr/lib/python3.11/site-packages/docker/api/client.py", line 221, in _retrieve_server_version raise DockerException( docker.errors.DockerException: Error while fetching server API version: ('Connection aborted.', PermissionError(13, 'Permission denied')) I am trying to reinstall docker-compose but it still error.
I have the following database, and would like some help with SQL queries: (1) Customers: Stores information about the users who made purchases. Fields: customer_id (INT, PK) - Unique ID for the customer, first_name (VARCHAR(50)) - First name, last_name (VARCHAR(50)) - Last name, email (VARCHAR(100)) - Email address, created_at (DATE) - Account creation date. (2) Products: Contains product catalog data. Fields: product_id (INT, PK) - Unique ID for the product, name (VARCHAR(100)) - Product name, category (VARCHAR(50)) - Product category, price (DECIMAL(10,2)) - Price, stock_qty (INT) - Number of items in stock. (3) Orders: Represents purchase orders placed by customers. Fields: order_id (INT, PK) - Unique ID for the order, customer_id (INT, FK) - Links to Customers.customer_id, order_date (DATE) - Date the order was placed, total_amount (DECIMAL(10,2)) - Total order cost. (4) OrderItems: Line items within each order, showing what was purchased. Fields: order_item_id (INT, PK) - Unique ID for the item entry, order_id (INT, FK) - Links to Orders.order_id, product_id (INT, FK) - Links to Products.product_id, quantity (INT) - Quantity of product ordered, unit_price (DECIMAL(10,2)) - Price per unit at time of order. (5) Payments: Tracks how and when orders were paid. Fields: payment_id (INT, PK) - Unique ID for the payment, order_id (INT, FK) - Links to Orders.order_id, payment_date (DATE) - When the payment was made, payment_method (VARCHAR(50)) - (e.g., 'Credit Card', 'PayPal'), amount (DECIMAL(10,2)) - Amount paid. Now for the queries I want help with: (1) I would like to retrieve the most sold order_item, and how much the store has earned from that single item. (2) I would like to find what payment method was the most used for the 5 most sold items. (3) From the 5 customers that have made the most orders, I would like to retrieve the items they purchase the most, and sort them by stock from low to high.
Currently, I'm working on a feature that involves parsing XML that we receive from another product. I decided to run some tests against some actual customer data, and it looks like the other product is allowing input from users that should be considered invalid. Anyways, I still have to try and figure out a way to parse it. We're using javax.xml.parsers.DocumentBuilder and I'm getting an error on input that looks like the following: <xml> ... <description>Example:Description:<THIS-IS-PART-OF-DESCRIPTION></description> ... </xml>. As you can tell, the description has what appears to be an invalid tag inside of it (<THIS-IS-PART-OF-DESCRIPTION>). Now, this description tag is known to be a leaf tag and shouldn't have any nested tags inside of it. Regardless, this is still an issue and yields an exception on DocumentBuilder.parse(...). I know this is invalid XML, but it's predictably invalid. Any ideas on a way to parse such input?
All libraries are updated. Library versions: implementation 'androidx.annotation:annotation-experimental:1.3.0', implementation 'androidx.core:core-ktx:1.9.0', implementation 'androidx.core:core:1.9.0', implementation 'androidx.appcompat:appcompat:1.5.1', implementation 'com.google.android.material:material:1.6.1', implementation 'androidx.constraintlayout:constraintlayout:2.1.4', implementation 'com.google.firebase:firebase-database:20.0.6', implementation 'com.google.firebase:firebase-config-ktx:21.1.2', implementation 'com.google.firebase:firebase-config:21.1.2', testImplementation 'junit:junit:4.13.2', androidTestImplementation 'androidx.test.ext:junit:1.1.3', androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0', implementation 'com.github.denzcoskun:ImageSlideshow:0.1.0', implementation('com.android.volley:volley:1.2.1'). Error: 3 issues were found when checking AAR metadata: Dependency 'androidx.core:core-ktx:1.9.0' requires libraries and applications that depend on it to compile against version 33 or later of the Android APIs. :app is currently compiled against android-32. Recommended action: Update this project to use a newer compileSdkVersion of at least 33, for example 33. Note that updating a library or application's compileSdkVersion (which allows newer APIs to be used) can be done separately from updating targetSdkVersion (which opts the app in to new runtime behavior) and minSdkVersion (which determines which devices the app can be installed on). Dependency 'androidx.core:core:1.9.0' requires libraries and applications that depend on it to compile against version 33 or later of the Android APIs. :app is currently compiled against android-32. Recommended action: Update this project to use a newer compileSdkVersion of at least 33, for example 33. Note that updating a library or application's compileSdkVersion (which allows newer APIs to be used) can be done separately from updating targetSdkVersion (which opts the app in to new runtime behavior) and minSdkVersion (which determines which devices the app can be installed on). Dependency 'androidx.annotation:annotation-experimental:1.3.0' requires libraries and applications that depend on it to compile against version 33 or later of the Android APIs. :app is currently compiled against android-32. Recommended action: Update this project to use a newer compileSdkVersion of at least 33, for example 33. Note that updating a library or application's compileSdkVersion (which allows newer APIs to be used) can be done separately from updating targetSdkVersion (which opts the app in to new runtime behavior) and minSdkVersion (which determines which devices the app can be installed on). How can I fix this?
I'm building a simple API to test a database. When I use a GET request everything works fine, but if I change to POST, I get a 422 Unprocessable Entity error. Here is the FastAPI code: from fastapi import FastAPI; app = FastAPI(); @app.post('/') def main(user): return user. Here is my JavaScript request: let axios = require('axios'); data = { user: 'smith' }; axios.post('http://localhost:8000', data).then(response => (console.log(response.url))). Also, using Python requests: import requests; url = 'http://127.0.0.1:8000'; data = {'user': 'Smith'}; response = requests.post(url, json=data); print(response.text). I also tried to parse as JSON, encode using utf-8, and change the headers, but nothing worked for me.
Write an example json file for an order reciept containing at leeast the order_id, customer info, items and the total.
Could you present me a function in ruby, c#, c++ and go, so i can compare the differences between the languages?